version: '3.8'
services:
  app:
    container_name: app-container
    image: jira_client:1.0.0
    build:
      context: .
      dockerfile: Dockerfile
    #    ports:
    #      - "8080:8080" # Закоментированно для доступа только через nginx
    restart: on-failure
    depends_on:
      service-db:
        condition: service_healthy
    networks:
      - postgres
      - nginx
    environment:
      DB_HOST: postgres-container
      DB_NAME: jira
      DB_USERNAME: jira
      DB_PASSWORD: JiraRush

  service-db:
    container_name: postgres-container
    image: postgres:latest
    environment:
      POSTGRES_USER: jira
      POSTGRES_PASSWORD: JiraRush
      POSTGRES_DB: jira
    ports:
      - "5432:5432"
    expose:
      - "5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d jira -U $${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: pgadmin-container
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - service-db
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - postgres

  nginx:
    container_name: nginx-container
    image: nginx:latest
    volumes:
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./resources/static:/usr/share/nginx/static
      - ./resources/robots.txt:/usr/share/nginx/robots.txt:ro
    ports:
      - "80:80"
    networks:
      - nginx
    depends_on:
      - app

volumes:
  db-data:
  pgadmin-data:

networks:
  postgres:
  nginx:
    driver: bridge